import jwt, { JwtPayload } from "jsonwebtoken";
import { Request, Response, NextFunction } from "express";

// üõ†Ô∏è –†–∞—Å—à–∏—Ä—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å Request
declare module "express-serve-static-core" {
  interface Request {
    user?: { trainer_id?: string; student_id?: string; role?: string };
  }
}

const authMiddleware = (req: Request, res: Response, next: NextFunction) => {
  const authHeader = req.headers.authorization;

  if (!authHeader || !authHeader.startsWith("Bearer ")) {
    return res.status(401).json({ message: "–ù–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω" });
  }

  const token = authHeader.split(" ")[1];

  try {
    const secret = process.env.ACCESS_SECRET;
    if (!secret) {
      console.error("‚ùå –û—à–∏–±–∫–∞: JWT_SECRET –Ω–µ –∑–∞–¥–∞–Ω –≤ .env");
      return res.status(500).json({ message: "–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞" });
    }

    // –î–µ–∫–æ–¥–∏—Ä—É–µ–º —Ç–æ–∫–µ–Ω
    const decoded = jwt.verify(token, secret) as JwtPayload;
    console.log(decoded);

    if (!decoded || typeof decoded !== "object" || !decoded.id || !decoded.role) {
      return res.status(403).json({ message: "–ù–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω" });
    }

    console.log("‚úÖ –î–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–æ–∫–µ–Ω:", decoded);

    // üìå –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–æ–ª—å –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º ID
    if (decoded.role === "trainer") {
      req.user = { trainer_id: decoded.id, role: "trainer" };
    } else if (decoded.role === "student") {
      req.user = { student_id: decoded.id, role: "student" };
    } else {
      return res.status(403).json({ message: "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è" });
    }

    next(); // ‚úÖ –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –¥–∞–ª—å—à–µ
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ —Ç–æ–∫–µ–Ω–∞:", error);
    return res.status(403).json({ message: "–ù–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω" });
  }
};

export default authMiddleware;
